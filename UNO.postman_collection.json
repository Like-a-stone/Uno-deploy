{
	"info": {
		"_postman_id": "8b800e69-f786-413a-8c45-eba9cfdbab58",
		"name": "UNO",
		"description": "### tior\nfdsfsdfsd",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38182919"
	},
	"item": [
		{
			"name": "Player",
			"item": [
				{
					"name": "Create Player",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Jane Doe\",\r\n  \"email\": \"jane.doe@example.com\",\r\n  \"age\": 30,\r\n  \"password\": \"anotherstrongpassword1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/players",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"players"
							]
						}
					},
					"response": []
				},
				{
					"name": "Player Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTczODQ2ODA1MSwiZXhwIjoxNzM4NDY5ODUxfQ.OSH5Ox6B_a5-Frmy-j6wOOzI6p-wbIPmmUVHQXorXlo",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/players/profile/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"players",
								"profile",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Player",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImVtYWlsIjoiamFuZS5kb2VAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzgxNTg0NzEsImV4cCI6MTczODE2MDI3MX0.RW_S48oBhGWSeR5P9LMArKondJfW7XnTSCihk2gfrv8",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Jane Doe\",\r\n  \"email\": \"jane.doe@example.com\",\r\n  \"age\": 312,\r\n  \"password\": \"anotherstrongpassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/players/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"players",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Player",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/players/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"players",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTczODQ4MjEzMSwiZXhwIjoxNzM4NDgzOTMxfQ.2TtlR-JFCxkvYiqJaQRewxExuHuNvmaBsoOH63ihTvg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"jane.doe@example.com\",\n    \"password\": \"anotherstrongpassword1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/players/login/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"players",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJuZXd1c2VyIiwiaWF0IjoxNzI4NjYzMDg5LCJleHAiOjE3Mjg2OTkwODl9.kSavhRSSToT1k8cguyZc4hVcD9WYSi8agw9_ManEavg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTUsImVtYWlsIjoiamFuZS5kb2VAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzgzNDU2MzEsImV4cCI6MTczODM0NzQzMX0.yf6zNJHg1pYm5Mdva2d35HbWDNnHWBTnmqjJg0gpUKI\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/players/refresh/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"players",
								"refresh",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTUsImVtYWlsIjoiamFuZS5kb2VAZXhhbXBsZS5jb20iLCJpYXQiOjE3MzgzNDczODcsImV4cCI6MTczODM0OTE4N30.WnYR5OHYyYve7-00hFBlYzGeMLbcg82JMsAszaG16zs",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/players/logout",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"players",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Games",
			"item": [
				{
					"name": "Create Games",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Super Mario\",\r\n  \"maxPlayers\": 2,\r\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTc0MDk0MjE4OSwiZXhwIjoxNzQwOTQ1Nzg5fQ.t9f8YQO006dirfpl0Dn5bMUNHVqHVftP1bH0jsNXdgg\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Games",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTczOTIxMDM2MCwiZXhwIjoxNzM5MjEyMTYwfQ.jJ2w6qzzZfzVR6ivjyGF9wZkRIcyTsGL45AYp6JHCqA",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Games",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Super Mario\",\r\n  \"status\": \"active\",\r\n  \"numPlayers\": 3\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Games",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Players In Game",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTczODQ3MjY2NCwiZXhwIjoxNzM4NDc0NDY0fQ.M0D4xcPRjgaP2bnRs2kRKcJ7i71kKpTJMaeqgxe90Aw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/1/players",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"1",
								"players"
							]
						}
					},
					"response": []
				},
				{
					"name": "Join Game",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 41,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJqYW5lMi5kb2VAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDA5NDIwNjcsImV4cCI6MTc0MDk0NTY2N30.LoF0zIYMvPeWG1YDtjj9z3Oks71UPg7sox-gP8YALlI\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/join",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"join"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ready To Game",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 41,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJqYW5lMi5kb2VAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDA5NDIwNjcsImV4cCI6MTc0MDk0NTY2N30.LoF0zIYMvPeWG1YDtjj9z3Oks71UPg7sox-gP8YALlI\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/ready",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"ready"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Game",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 41,\n    \"cardsPerPlayer\": 30,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTc0MDk0MjE4OSwiZXhwIjoxNzQwOTQ1Nzg5fQ.t9f8YQO006dirfpl0Dn5bMUNHVqHVftP1bH0jsNXdgg\"  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/start",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leave Game",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 1,\n    \"access_token\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/leavegame",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"leavegame"
							]
						}
					},
					"response": []
				},
				{
					"name": "End Game",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 120,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTc0MTI3ODM5NCwiZXhwIjoxNzQxMjgxOTk0fQ.SCPRBwph2N08tlYp8EjEYLpExtFGarlv52iCM50ztiU\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/endgame",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"endgame"
							]
						},
						"description": "Com front:  \nFront end sempre verificar o card count de cada jogador,  \nse algum jogador tiver count 0 ele enviar o pedido para backend terminar o jogo  \nCom Postman:  \nQualquer jogador (preferenciamente o que está sem cartas) pede pelo fim jogo."
					},
					"response": []
				},
				{
					"name": "Get Game Status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/64/status",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"64",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Player Turn",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/currentplayer",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"currentplayer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Game Hitory",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/12/history",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"12",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Say Uno",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 113,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTc0MTI3MDA1OCwiZXhwIjoxNzQxMjczNjU4fQ.oJJWwpUCUmRfUk_UmALSga16I-NtU5Rsz5zGdhKtF-Q\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/say-uno",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"say-uno"
							]
						}
					},
					"response": []
				},
				{
					"name": "Challenge Uno",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 116,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTc0MTI3NDEzNSwiZXhwIjoxNzQxMjc3NzM1fQ.NGyh7SlkULnLyb5fuPqXg0OJM0ki67cvr0m3oIb4RlM\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/games/challenge-uno",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"games",
								"challenge-uno"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cards",
			"item": [
				{
					"name": "Create Cards",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"color\": \"red\",\r\n  \"value\": \"5\",\r\n  \"gameId\": 3\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/cards",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"cards"
							]
						},
						"description": "testes"
					},
					"response": []
				},
				{
					"name": "Read Cards",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/cards/2",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"cards",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cards",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"color\": \"blue\",\r\n  \"value\": \"5\",\r\n  \"gameId\": 3\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/cards/2",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"cards",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cards",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/cards/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"cards",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Take Card From Deck",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 41,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqYW5lLmRvZUBleGFtcGxlLmNvbSIsImlhdCI6MTc0MDk0MjE4OSwiZXhwIjoxNzQwOTQ1Nzg5fQ.t9f8YQO006dirfpl0Dn5bMUNHVqHVftP1bH0jsNXdgg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/cards/take",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"cards",
								"take"
							]
						}
					},
					"response": []
				},
				{
					"name": "View Player Hand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 48,\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiZW1haWwiOiJqYW5lMS5kb2VAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDExNzk0NjEsImV4cCI6MTc0MTE4MzA2MX0.1ux5f15KObHVeODqVXFiL1m7elE9w2BWLweJ5o9_uJw\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/cards/player-cards",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"cards",
								"player-cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Play Card in Hand",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cardPlayed\": \"green reverse\",\n    \"newColor\": \"blue, red, yellow, green\",\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJqYW5lMi5kb2VAZXhhbXBsZS5jb20iLCJpYXQiOjE3NDA5NDIwNjcsImV4cCI6MTc0MDk0NTY2N30.LoF0zIYMvPeWG1YDtjj9z3Oks71UPg7sox-gP8YALlI\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/cards/play/41",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"cards",
								"play",
								"41"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Scores",
			"item": [
				{
					"name": "Create Scores",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"playerId\": 2,\r\n  \"gameId\": 2,\r\n  \"score\": 200\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/scores",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"scores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Scores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/scores/4",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"scores",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Scores",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"playerId\": 2,\r\n  \"gameId\": 2,\r\n  \"score\": 200\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/scores/3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"scores",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Scores",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/scores/3",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"scores",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Game Scores",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"game_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/scores/gamescores",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"scores",
								"gamescores"
							]
						}
					},
					"response": []
				}
			],
			"description": "Quando o jogo for iniciado o score de cada jogador será criado. Cada jogador terá pontuacao inicial zero, e quanto mais cartas ele perde no decorrer do jogo mais pontos ele terá. Dessa forma o ganhador de jogo será o jogador com zero carta, e consequentemente será o jogador com maior pontuacao, uma vez que a quantidade pontos é inversamente propocional a quantidade de cartas.  \n7 cartas iniciais: 0 score.  \nJogador possui mais que 7 cartas: pontuacao continua zerada.  \nQuantidade de carta do jogador fica menor que 7 (exemplo 6) a pontuacao comeca a aumentar até chegar no maior valor possivel quando o jogador possui zero cartas.\n\nA logica dos scores so funcionara corretamente em jogos que possuem 7 cartas iniciais para jogadores"
		},
		{
			"name": "stats",
			"item": [
				{
					"name": "Requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/stats/requests",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"stats",
								"requests"
							]
						}
					},
					"response": []
				},
				{
					"name": "response-times",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/stats/response-times",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"stats",
								"response-times"
							]
						}
					},
					"response": []
				},
				{
					"name": "status-codes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/stats/status-codes",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"stats",
								"status-codes"
							]
						}
					},
					"response": []
				},
				{
					"name": "popular-endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/stats/popular-endpoints",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"stats",
								"popular-endpoints"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost",
			"type": "string"
		},
		{
			"key": "port",
			"value": "80",
			"type": "string"
		}
	]
}